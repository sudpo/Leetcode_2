算法： 注意初始条件

class Solution {
public:
    bool isMatch(string s, string p) {
        int n = s.size();
        int m = p.size();

        vector<vector<bool> > dp(n+1, vector<bool> (m+1, false));
        dp[0][0] = true;

        for(int j = 1; j <= m; ++j) {
            dp[0][j] = p[j-1] == '*' && dp[0][j-1];
        }
        for(int i = 1; i <= n; ++i){
            for(int j = 1; j <= m; ++j){
                if(p[j-1] != '*'){
                    dp[i][j] = dp[i-1][j-1] && (s[i-1] == p[j-1] || p[j-1] == '?');
                }else{
                    //means that if p[j-1] is *, dp[i][j] is true if either dp[i][j-1] is true: s[0:i-1] matches p[0:j-2] and * is not used here; or dp[i-1][j] is true: s[0:i-2] matches p[0:j-1] and * is used to match s[i-1].

                    dp[i][j] = dp[i][j-1] || dp[i-1][j];
                }
            }
        }
        return dp[n][m];
    }
};
