class Solution {
public:
    bool isAnagram(string s, string t) {
        unordered_map<char, int> count;
        if(s.size() != t.size()) {
            return false;
        }
        for(int i = 0; i < s.size(); ++i){
            count[s[i]]++;
        }
        for(int j = 0; j < t.size(); ++j){
            count[t[j]]--;
            if(count[t[j]] < 0) {
                return false;
            }
        }
        return true;
    }
};

利用 string contains only lowercase alphabets 用数组代替map
class Solution {
public:
    bool isAnagram(string s, string t) {
        vector<int> count(26,0);
        if(s.size() != t.size()) {
            return false;
        }
        for(int i = 0; i < s.size(); ++i){
            count[s[i] - 'a']++;
        }
        for(int j = 0; j < t.size(); ++j){
            count[t[j]- 'a']--;
            if(count[t[j] -'a'] < 0) {
                return false;
            }
        }
        return true;
    }
};
