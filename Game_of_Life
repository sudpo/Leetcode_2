解题思路， 每个CELL有四种状态转移 死死，死活，活死，活活， 可以用两位的BITE来表示状态转移，末位表示当前状态，高位表示最终状态 
00 死死，
10 死活，
01 活死，
11 活活

注意在这我们用 &1 的方法来取得末位为0 还是1 然后用 >>=1 的方法取得最高位的状态



class Solution {
public:
    void gameOfLife(vector<vector<int>>& board) {
        int n = board.size();
        if(n == 0) {
            return;
        }
        int m = board[0].size();
        if(m == 0){
            return;
        }
        
        int d[][2] = {{1,-1},{1,0},{1,1},{0,-1},{0,1},{-1,-1},{-1,0},{-1,1}};
        
        for(int i = 0; i < n; ++i){
            for(int j = 0; j < m; ++j){
                int live = 0;
                for(int k = 0; k < 8; ++k){
                    int x = d[k][0] + i;
                    int y = d[k][1] + j;
                    if(x < 0 || x >= n || y < 0 || y >= m) {
                        continue;
                    }
                    if(board[x][y] & 1){
                        live++;
                    }
                }
                if(board[i][j] == 0) {
                    if(live == 3){
                        board[i][j] = 2;
                    }
                }else{
                    if(live < 2 || live > 3){
                        board[i][j] = 1;
                    }
                    else{
                        board[i][j] = 3;
                    }
                }
            }
        }
        for(int i = 0; i < n; ++i){
            for(int j = 0; j < m; ++j){
                board[i][j] >>= 1;
            }
        }
        return;
    }
};
