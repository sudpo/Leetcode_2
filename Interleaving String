class Solution {
public:
    bool isInterleave(string s1, string s2, string s3) {
        string tmp1 = s1 + s2;
        if(tmp1.size() != s3.size()){
            return false;
        }
        string tmp2 = s3;
        sort(tmp1.begin(), tmp1.end());
        sort(tmp2.begin(), tmp2.end());
        if(tmp1 != tmp2){
            return false;
        }

        int n = s1.size();
        int m = s2.size();

        if(n == 0 || m == 0){
            return true;
        }

        vector<vector<bool> > dp(n+1, vector<bool>(m+1, false));
        dp[0][0] = true;
        for(int i = 1; i <= n; ++i){
            if(s1[i-1] == s3[i-1]){
                dp[i][0] = dp[i-1][0];
            }
        }

        for(int j = 1; j <= m; ++j){
            if(s2[j-1] == s3[j-1]){
                dp[0][j] = dp[0][j-1];
            }
        }

        for(int i = 1; i <= n; ++i) {
            for(int j = 1; j <= m; ++j) {
                dp[i][j] = (dp[i-1][j] &&s3[i+j-1] == s1[i-1]) || (dp[i][j-1] && s3[i+j-1] == s2[j-1]);
            }
        }
        return dp[n][m];

    }
};
