class Solution {
public:
    int search(vector<int>& nums, int target) {
        if(nums.size() == 0) {
            return -1;
        }

        int start = 0;
        int end = nums.size() - 1;
        while(start + 1 < end){
            int mid = start + (end - start) / 2;
            if(nums[mid] == target){
                return mid;
            }
            if(nums[mid] > nums[start]){
                if(nums[mid] < target || (target <= nums[end] && nums[end] < nums[start])){
                    start = mid;
                }else{
                    end = mid;
                }
            }else{
                if(nums[mid] > target || (target >= nums[start] && nums[end] < nums[start])){
                    end = mid;
                }else{
                    start = mid;
                }
            }
        }
        if(nums[end] == target){
            return end;
        }else if(nums[start] == target){
            return start;
        }
        return -1;
    }
};

改写一下 更不容易出错

class Solution {
public:
    int search(vector<int>& nums, int target) {
        if(nums.size() == 0) {
            return -1;
        }

        int start = 0;
        int end = nums.size() - 1;
        while(start + 1 < end){
            int mid = start + (end - start) / 2;
            if(nums[mid] == target){
                return mid;
            }
            if(nums[mid] > nums[end]){
                if(nums[mid] < target || target <= nums[end]){
                    start = mid + 1;
                }else{
                    end = mid;
                }
            }else{
                if(nums[mid] < target && target <= nums[end]){
                    start = mid + 1;
                }else{
                    end = mid;
                }
            }
        }
        if(nums[end] == target){
            return end;
        }else if(nums[start] == target){
            return start;
        }
        return -1;
    }
};
