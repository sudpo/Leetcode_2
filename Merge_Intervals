关于sort 的lambda function 的写法
sort(intervals.begin(), intervals.end(), [](Interval a, Interval b) {return a.start < b.start;});

也可以写成
bool myfunction (Interval i,Interval j) { return (i.start<j.start); }
sort(intervals.begin(), intervals.end(), myfunction);
/**
 * Definition for an interval.
 * struct Interval {
 *     int start;
 *     int end;
 *     Interval() : start(0), end(0) {}
 *     Interval(int s, int e) : start(s), end(e) {}
 * };
 */
class Solution {
    bool isMerge(const Interval a, const Interval b){
        if(a.end >= b.start){
            return true;
        }
        return false;
    }

    Interval merge(Interval a, Interval b){
        Interval res(a.start, max(a.end, b.end));
        return res;
    }
public:
    vector<Interval> merge(vector<Interval>& intervals) {
        vector<Interval> res;
        int n = intervals.size();
        if(n == 0) {
            return res;
        }
        sort(intervals.begin(), intervals.end(), [](Interval a, Interval b) {return a.start < b.start;});
        while(intervals.size() > 1){
            if(isMerge(intervals[0], intervals[1])){
                intervals[1] = merge(intervals[0], intervals[1]);
                intervals.erase(intervals.begin());
            }else{
                res.push_back(intervals[0]);
                intervals.erase(intervals.begin());
            }
        }
        res.push_back(intervals[0]);
        return res;
    }
};
