算法DP
class Solution {
public:
    int climbStairs(int n) {
        if(n <= 1){
            return 1;
        }
        vector<int> methods(n+1, 0);
        methods[0] = 1;
        methods[1] = 1;
        for(int i = 2; i <= n; ++i){
            methods[i] = methods[i-1] + methods[i-2];
        }
        return methods[n];
    }
};

用两个变量代替一维数组

class Solution {
public:
    int climbStairs(int n) {
        if(n <= 1){
            return 1;
        }
        int method1 = 1;
        int method2 = 1;
        for(int i = 2; i <= n; ++i){
            int tmp = method1;
            method1 = method1 + method2;
            method2= tmp;
        }
        return method1;
    }
};
