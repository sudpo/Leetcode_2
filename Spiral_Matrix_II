class Solution {
public:
    vector<vector<int>> generateMatrix(int n) {
        if(n == 0) {
            return vector<vector<int> >();
        }

        vector<vector<int> > res(n, vector<int>(n, 0));
        int left = 0;
        int right = n-1;
        int top = 0;
        int bottom = n -1;
        int direction = 0;
        int num = 1;
        while(left <= right && top <= bottom){
            if(direction == 0) {
                for(int i = left; i <= right; ++i ){
                    res[top][i] = num;
                    num++;
                }
                top++;
            }else if(direction == 1){
                for(int i = top; i <= bottom; ++i){
                    res[i][right] = num;
                    num++;
                }
                right--;
            }else if(direction == 2){
                for(int i = right; i >= left; --i){
                    res[bottom][i] = num;
                    num++;
                }
                bottom--;
            }else {
                for(int i = bottom; i >= top; --i){
                    res[i][left] = num;
                    num++;
                }
                left++;
            }
            direction = (direction + 1) % 4;
        }
        return res;
    }
};
