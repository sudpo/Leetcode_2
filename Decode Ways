class Solution {
    bool isValid(char a){
        return a != '0';
    }
    
    bool isValid(char a, char b){
        return (a =='1' || (a == '2' && b <= '6'));
    }
public:
    int numDecodings(string s) {
        int n = s.size();
        if(n < 1 || s[0] == '0'){
            return 0;
        }
        
        vector<int> dp(n+1, 0);
        dp[0] = 1;
        dp[1] = 1;
        for(int i = 1; i < n; ++i){
            if(isValid(s[i]) && isValid(s[i-1], s[i])){
                dp[i+1] = dp[i-1] + dp[i];
            }else if(isValid(s[i]) && !isValid(s[i-1], s[i])){
                dp[i+1] = dp[i];
            }else if(!isValid(s[i]) && isValid(s[i-1], s[i])){
                dp[i+1] = dp[i-1];
            }else{
                return 0;
            }
        }
        return dp[n];
    }
};

用变量代替数组

class Solution {
    bool isValid(char a){
        return a != '0';
    }

    bool isValid(char a, char b){
        return (a =='1' || (a == '2' && b <= '6'));
    }
public:
    int numDecodings(string s) {
        int n = s.size();
        if(n < 1 || s[0] == '0'){
            return 0;
        }

        int res = 0;
        int res1 = 1;
        int res2 = 1;
        for(int i = 1; i < n; ++i){
            if(isValid(s[i]) && isValid(s[i-1], s[i])){
                res = res1 + res2;
            }else if(isValid(s[i]) && !isValid(s[i-1], s[i])){
                res = res1;
            }else if(!isValid(s[i]) && isValid(s[i-1], s[i])){
                res = res2;
            }else{
                return 0;
            }
            res2 = res1;
            res1 = res;
        }
        return res1;
    }
};
