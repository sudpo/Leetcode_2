/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode(int x) : val(x), next(NULL) {}
 * };
 */
class Solution {
public:
    ListNode* addTwoNumbers(ListNode* l1, ListNode* l2) {
        if(l1 == NULL) {
            return l2;
        }
        if(l2 == NULL) {
            return l1;
        }
        ListNode *dummy = new ListNode(0);
        ListNode *current = NULL;
        int carry = 0;
        while(l1 != NULL && l2 != NULL){
            int tmp = (l1->val + l2->val + carry) % 10;
            carry = (l1->val + l2->val + carry) / 10;
            ListNode *newNode = new ListNode(tmp);
            if(current == NULL) {
                current = newNode;
                dummy->next = current;
            }
            else{
                current->next = newNode;
                current = current->next;
            }
            l1 = l1->next;
            l2 = l2->next;
        }

        while(l1 != NULL) {
            int tmp = (l1->val + carry) % 10;
            carry = (l1->val + carry) / 10;
            ListNode *newNode = new ListNode(tmp);
            current->next = newNode;
            current = current->next;
            l1 = l1->next;
        }

        while(l2 != NULL) {
            int tmp = (l2->val + carry) % 10;
            carry = (l2->val + carry) / 10;
            ListNode *newNode = new ListNode(tmp);
            current->next = newNode;
            current = current->next;
            l2 = l2->next;
        }
        if(carry != 0){
            ListNode *newNode = new ListNode(carry);
            current->next = newNode;
        }
        return dummy->next;
    }
};
