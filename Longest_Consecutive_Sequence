算法： 用set 存放所有元素，对数组中每个元素tmp 在set中寻找tmp - 1, tmp -2 直到没有找到为止，同理寻找tmp + 1, tmp +2 ...得到一个consecutive 的长度，然后求最大值 （ 要点，使用过的元素要从set中除去）

class Solution {
public:
    int longestConsecutive(vector<int>& nums) {
        int n = nums.size();
        if(n < 2) {
            return n;
        }

        unordered_set<int> record(nums.begin(), nums.end());

        int maxLen = 0;
        for(int i = 0; i < n; ++i){
            int tmp = nums[i];
            int res = 0;
            if(record.find(tmp) == record.end()){
                continue;
            }
            else{
                res++;
                record.erase(tmp);
                int pre = tmp-1;
                int next = tmp+1;
                while(record.find(pre) != record.end()){
                    record.erase(pre);
                    pre--;
                    res++;
                }
                while(record.find(next) != record.end()){
                    record.erase(next);
                    next++;
                    res++;
                }
                maxLen = max(maxLen, res);
            }
        }
        return maxLen;
    }
};
