class Solution {
public:
    int longestValidParentheses(string s) {
        int n = s.size();
        if(n < 2){
            return 0;
        }

        vector<int> dp(n, 0);

        int res = 0;
        for(int i = 1; i < n; ++i){
            if(s[i] == '('){
                continue;
            }
            if(s[i-1] == '('){
                if(i == 1){
                    dp[i] = 2;
                }else{
                    dp[i] = dp[i-2] + 2;
                }
            }
            else if(i - dp[i-1] - 1 >= 0 && s[i-1-dp[i-1]] == '('){
                dp[i] = dp[i-dp[i-1]-2] + dp[i-1] + 2;
            }
            res = max(res, dp[i]);
        }
        return res;
    }
};
